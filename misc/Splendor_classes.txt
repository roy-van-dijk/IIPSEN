??? = Not sure whether it's a good idea
?? = Probably a good idea
? = Good idea, though open for suggestions.


DeckReader
- IO class
- Gets three decks injected into it?? (as opposed to one, due to expensiveness of IO operation)
- Reads all game cards from cards.csv and stores them respectively in the three decks

Deck
- model class
- Contains deck data such as CardLevel and an array of all cards in it
- Max 40 cards for LEVEL1, 30 cards for LEVEL2, 20 cards for LEVEL1

DeckView
- view class
- Gets Deck class injected into it
- Renders deck on playing field 
- Renders deck visually as an upside down level-backgrounded card w/ thick borders?

Card
- model class
- contains card data such as card cost, CardLevel, bonus Gem, prestige value and illustration type
- Tracks ownership of card???

CardView
- view class
- Gets Card class injected into it
- Renders cards on playing field as well as in player hand.
- Renders following card data visually using JavaFX methods:
	- Card illustration as background
	- Card costs bottom left
	- Bonus Gem top right
	- Prestige value top left
	- Level background if turned upside down???
- Inherits from javafx.scene.shape.Rectangle??

CardLevel
- enum class
- consists of:
	- LEVEL1
	- LEVEL2
	- LEVEL3
	
Gem
- enum class
- consists of:
	- DIAMOND
	- EMERALD
	- SAPPHIRE
	- RUBY
	- ONYX
	- GOLD???


Token
- model class
- contains token data such as which gem it represents
- note: If Gem class does not contain GOLD, a TokenType class is required.

TokenView
- view class
- Gets Token class injected into it
- Renders the token
- Inherits from javafx.scene.shape.Circle??


PlayingField???
- model class
- Contains decks

MoveType
- enum class
- consists of:
	- BUY_CARD
	- RESERVE_CARD
	- BUY_RESERVED_CARD
	- TAKE_TWO_TOKENS
	- TAKE_THREE_TOKENS
	- PUT_BACK_TOKENS

	